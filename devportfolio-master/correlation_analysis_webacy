<!DOCTYPE html>
<html class="no-js" lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>My Portfolio</title>
    <style>
        #about p {
        font-size: 18px !important; /* Apply size with high priority */
        line-height: 1.7 !important;
        }
    /* Global paragraph styling */
         body p {
        font-size: 16px !important; /* Apply size with high priority */
        line-height: 1.7 !important;
        }
        #about .container {
    display: flex;
    flex-direction: column;
    align-items: center; /* Centers content horizontally */
    justify-content: center; /* Centers content vertically if needed */
    text-align: center; /* Centers the text */
    max-width: 2000px; /* Adjust width as needed */
    margin: 0 auto; /* Centers the container */
    }
    </style>
	<link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
	<link rel="icon" href="favicon.ico" type="image/x-icon">
    <link href="https://fonts.googleapis.com/css?family=Lato:300,400,700,900" rel="stylesheet">
    <link rel="stylesheet" href="libs/font-awesome/css/font-awesome.min.css">
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link href="css/styles.css" rel="stylesheet">
</head>


<body class="second-page">
    <div id="mobile-menu-open" class="shadow-large">
        <i class="fa fa-bars" aria-hidden="true"></i>
    </div>
    <!-- End #mobile-menu-toggle -->
    <header>
        <div id="mobile-menu-close">
            <span>Close</span> <i class="fa fa-times" aria-hidden="true"></i>
        </div>
        <ul id="menu" class="shadow">
            <li>
                <a href="index.html" onclick="window.location.href='index.html'; return true;"> Back to Main Menu</a>
            </li>
        </ul>
    </header>
    <!-- End header -->
    <!-- End header -->

    <div id="lead">
        <div id="lead-content">
            <h1> Correlation Analysis of Smart Contract Risks </h1>
            <h2> Performed Using Python</h2>
        </div>
        <!-- End #lead-content -->
        <div id="lead-down">
            <span>
                <i class="fa fa-chevron-down" aria-hidden="true"></i>
            </span>
        </div>
        <!-- End #lead-down -->
    </div>
    <!-- End #lead -->
    <div id="github-link" class="background">
        <div class="container">
            <div class="row">
                <br>
                <br>
                    <h3>
                        To view all the files I used to create this project, visit my <a href="https://github.com/DRehan003/Correlation_Analysis_Webacy" target="_blank"><strong>GitHub</strong></a>.
                    </h3>
            </div>
            <!-- End .row -->
        </div>
        <!-- End .container -->
    </div>
    
    <div id="overview" class="background">
        <div class="container">
            <div class="row">
                <br>
                <h2 h2 class="heading"> Overview </h2>
                <p><strong>Objective: </strong>
                    Create a visual representation of the correlation matrix to highlight potential relationships between different risk tags.                </p>
                <p>
                    <strong>Essential Terminology: </strong> 
                        <p>  <strong>1. Smart Contract:</strong> A self-executing program stored on the blockchain that automatically carries out an agreement when certain conditions are met without needing a middleman.</p>
                    
                    <p> - For Example: Let’s say you want to buy a digital artwork. A smart contract can be set up so that as soon as you send the payment, the artwork is automatically transferred to you. No need for a third party like PayPal or a bank.</p>
                    
                    <p>- Smart contracts' use cases are ever-growing. They can even be used for something as simple as a pair of friends making a bet on which team will win a sports game.</p>
                    
                    <p><strong>- Why Are They Important?</strong></p>
                    <ul>
                      <li><strong>No Middlemen:</strong> No banks, lawyers, or companies are needed to enforce the contract.</li>
                      <li><strong>Transparent:</strong> Everyone can see how the contract works (no hidden rules).</li>
                      <li><strong>Secure & Immutable:</strong> Once written on the blockchain, it can’t be changed or tampered with.</li>
                    </ul>
                    <p><strong>2. Risk Tag:</strong> Think of risk tags like warning labels on food—they alert you to potential dangers before you interact with a wallet or contract. These risk tags are provided by Webacy, a security platform that helps protect crypto and NFT assets. There are a total of 32 risk tags, each representing a different type of risk.</p>
                    
                    <p><strong> - What do they detect?</strong></p>
                    <ul>
                      <li>Risks of a contract taking your funds through scam, hacks, or fraud.</li>
                      <li>Hacking of your tokens.</li>
                      <li>Suspicious activity, such as involvement in shady transactions.</li>
                      <li>Fake contracts mimicking legitimate ones.</li>
                    </ul>
                    
                </div>
                <!-- End .row -->
                <br>

                <h2 h2 class="heading"> Steps: </h2>
                <h2> Step 1: Import the necessary libraries and load the dataset </h2>

<p><strong>The libraries:</strong> <br>
    &nbsp;&nbsp;&nbsp;&nbsp; - Pandas <br>
    &nbsp;&nbsp;&nbsp;&nbsp; - Numpy <br>
    &nbsp;&nbsp;&nbsp;&nbsp; - Matplotlib <br>
    &nbsp;&nbsp;&nbsp;&nbsp; - Seaborn <br>
    &nbsp;&nbsp;&nbsp;&nbsp; - Scipy <br>
    &nbsp;&nbsp;&nbsp;&nbsp; - networkx <br>
</p>
<p>The dataset you will be using is a "<strong>compiled_risk_dataset</strong>". What exactly is in this dataset? This dataset contains 1094 entries of smart contract vulnerabilities. The first 3 columns contain essential information about the smart contract: the project name, the smart contract address, and the chain. The remaining columns are 32 potential risk tags that may be present in any given smart contract. The dataset is essentially a table that lists what specific risks are present in each contract.</p>
<p>Download the dataset and save it into a pandas dataframe. Print the first five rows using the <code>.head()</code> function.</p>
<br>
<h2> Step 2: Create Function to Calculate Correlations </h2>

<p><strong>How will we calculate the correlations?</strong><br>
We will use the Phi coefficient, which is specifically designed for binary data. The Phi Coefficient is a measure of the association between two binary variables. To calculate the Phi coefficient, we first need to establish a function that can handle this calculation. Create a function that can compute correlations of 2 binary variables.</p>

<p>The following code creates a contingency table:</p>
<pre><code>contingency_table = pd.crosstab(x, y)</code></pre>

<p>The following code calculates the Phi coefficient:</p>
<pre><code>chi2 = scipy.stats.chi2_contingency(contingency_table, correction=False)[0]</code></pre>
<pre><code>n = np.sum(np.sum(contingency_table))</code></pre>
<pre><code>phi = np.sqrt(chi2 / n)</code></pre>
<br>
<h2> Step 3: Calculate Correlations </h2>

<ol>
    <li>First, we need to create an array called <strong>risk_columns</strong> that will contain all of our risk tags.</li>
    <li>Load the array into a pandas dataframe.</li>
    <li>Create a DataFrame to store Phi coefficients using the following code:</li>
</ol>

<pre><code>phi_matrix = pd.DataFrame(index=risk_df.columns, columns=risk_df.columns)</code></pre>

<p>Use the following code to calculate Phi coefficient for each pair of binary variables:</p>

<pre><code>for var1 in risk_df.columns:</code></pre>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;for var2 in risk_df.columns:</code></pre>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;phi_matrix.loc[var1, var2] = phi_coefficient(risk_df[var1], risk_df[var2])</code></pre>

<br>
<h2> Step 4: Visualization </h2>

<p>Now it is time to visualize our analysis. Use the following code to create a heatmap:</p>

<pre><code>plt.figure(figsize=(12, 10)) # Setting the size of the plot</code></pre>
<pre><code>sns.heatmap(phi_matrix.astype(float), annot=False, fmt=".2f", cmap='coolwarm', vmin=-1, vmax=1)</code></pre>
<pre><code>plt.title('Heatmap of Phi Coefficients Between Risk Tags')</code></pre>
<pre><code>plt.xticks(rotation=45, ha='right')</code></pre>
<pre><code>plt.show()</code></pre>

<p>Your heatmap should look like the following:</p>
<img src="images/Correlation_analysis.png" alt="Correlation Analysis Heatmap">
<br>
<h2> Findings </h2>

<p><strong>Positive correlations:</strong><br>
1. buy_tax and sell_tax<br>
2. encode_packed_parameters and encode_packed_collision<br>
3. encode_packed_collision and is_airdrop_scam<br>
4. illegal_unicode and is_airdrop_scam<br>
5. anti_whale_modifiable and slippage_modifiable<br>
6. is_false_token and is_airdrop_scam<br>
7. shadowing_local and is_airdrop_scam<br>
8. shadowing_local and encode_packed_collision</p>

<p><strong>Deeper insights:</strong></p>
<ul>
    <li>"is_blacklisted" has a weak correlation with "is_honeypot". This may suggest that blacklisting mechanisms are not commonly seen in contracts that try to trap users.</li>
    <li>Since "is_honeypot" and "anti_whale_modifiable" are correlated, it may suggest that contracts implementing anti-whale mechanisms often include honeypot-like restrictions.</li>
    <li>The strong correlation between "can_take_back_ownership" and "owner_change_balance" may indicate that contracts allowing ownership reversal often also have direct balance modification risks.</li>
    <li>"centralized_risk_high", "centralized_risk_medium", and "centralized_risk_low" might show strong intra-group correlations, indicating that centralization-related vulnerabilities frequently co-occur.</li>
    <li>"selfdestruct" and "trust_list" might correlate, meaning contracts using self-destruction mechanisms often implement allowlists. This can be a common issue among contracts that have both of these risk tags.</li>
</ul>
        </div>
        <!-- End .container -->
    </div>
</div>


    <footer>
        <div class="container">
            <div class="row">
                <div class="col-sm-5 copyright">
                    <p>
                        Copyright &copy; <span id="current-year">2025</span> Danyal Rehan
                    </p>
                </div>
                <div class="col-sm-2 top">
                    <span id="to-top">
                        <i class="fa fa-chevron-up" aria-hidden="true"></i>
                    </span>
                </div>
                <div class="col-sm-5 social">
                    <ul>
                        <li>
                            <a href="https://github.com/DRehan003" target="_blank"><i class="fa fa-github" aria-hidden="true"></i></a>
                        </li>
                        <li>
                            <a href="https://www.linkedin.com/in/danyal-rehan/" target="_blank"><i class="fa fa-linkedin" aria-hidden="true"></i></a>
                        </li>
                        <li>
                            <a href="https://www.youtube.com/@danyalrehan" target="_blank"><i class="fa fa-youtube" aria-hidden="true"></i></a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <!-- End footer -->

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="js/scripts.min.js"></script>
</body>

</html>
